#!/usr/bin/env bash

# This file is part of colmena security project
# Copyright (C) 2010-2020, Mario Rodriguez <colmena (at) bambusoft.com>
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3
# of the License, or (at your option) any later version.

. /lib/lsb/init-functions
COLMENA_VER="1.0.0"
COLMENA_CFG="/etc/colmena"
COLMENA_LOG="/var/log/colmena/colmena.log"
NFP_BIN="/usr/sbin/netfilter-persistent"
SYS_LOG="/var/log/syslog"
F2B_BIN="/etc/init.d/fail2ban"
F2B_LOG="/var/log/fail2ban.log"
IPS_BIN=$(which ipset)
IP4_BIN=$(which iptables)
IP6_BIN=$(which ip6tables)
IP4_RES="$IP4_BIN-restore"
IP6_RES="$IP6_BIN-restore"
GRP_BIN=$(which grep)
LSF_BIN=$(which lsof)

if [ "$UID" -ne 0 ]; then
	echo "Execution failed: you must be logged in as 'root' or have sudo privileges"
	exit 1
fi

if [ ! -f $COLMENA_LOG ]; then
	touch $COLMENA_LOG
	chmod 660 $COLMENA_LOG
fi

echo "" >> $COLMENA_LOG
date >> $COLMENA_LOG

ctask() {
	# $1=action_msg, $2=log_msg, $3=script $4=argument
	log_action_begin_msg "$1"
	echo -e "$1\n- Calling $2 $4" >> $COLMENA_LOG
	eval "${3} ${4}"
	log_action_end_msg $?
	echo "Result: $?" >> $COLMENA_LOG
}

ensure_f2b_stop() {
	x=$(ps -ef | grep fail2ban-server | grep -v grep | awk '{print $2}' | wc -l)
	while [ $x -ge 1 ]
		do
			ps -ef | grep fail2ban-server | grep -v grep | awk '{print $2}' | xargs kill -SIGTERM
			sleep 3
			x=$(ps -ef | grep fail2ban-server | grep -v grep | awk '{print $2}' | wc -l)
			echo "Wait for: $x process(es) to end"
		done
}

case "$1" in
start|force-start)
	# $1=action_msg, $2=log_msg, $3=script $4=argument
	ctask "Loading colmena firewall manager" "netfilter" $NFP_BIN $1
	ctask "Loading colmena failure manager" "fail2ban" $F2B_BIN $1
	;;
restore)
	ctask "Stopping colmena failure manager" "fail2ban" $F2B_BIN stop
	echo -e "Restoring iptables\n- Calling $IPT_RES < iptables_rules" >> $COLMENA_LOG
	$IP4_RES < $COLMENA_CFG/iptables.firewall.rules
	$IP6_RES < $COLMENA_CFG/ip6tables.firewall.rules
	ctask "Saving colmena rules and sets" "netfilter" $NFP_BIN save
	ctask "Loading colmena failure manager" "fail2ban" $F2B_BIN start
	;;
restart|reload|force-reload)
	# $1=action_msg, $2=log_msg, $3=script $4=argument
	ctask "Loading colmena firewall manager" "netfilter" $NFP_BIN $1
	ensure_f2b_stop
	ctask "Loading colmena failure manager" "fail2ban" $F2B_BIN start
	;;
list-set)
	echo -e "Listing ip sets\n- Calling $IPS_BIN list" >> $COLMENA_LOG
	$IPS_BIN list
	;;
list-ban)
	echo -e "Showing fail2ban log\n- Calling cat $F2B_LOG" >> $COLMENA_LOG
	cat $F2B_LOG
	;;
list-blocked)
	echo -e "Showing syslog iptables denied\n- Calling $GRP_BIN colmena $SYS_LOG" >> $COLMENA_LOG
	$GRP_BIN "colmena" $SYS_LOG
	;;
list-ports)
	echo -e "Showing ports\n- Calling lsof -i -P -n " >> $COLMENA_LOG
	$LSF_BIN -i -P -n
	;;
list-rules)
	echo -e "Showing ports\n- Calling iptables -L " >> $COLMENA_LOG
	$IP4_BIN -L
	$IP6_BIN -L
	;;
save)
	ctask "Saving colmena rules and sets" "netfilter" $NFP_BIN save
	;;
stop)
	ctask "Stopping colmena failure manager" "fail2ban" $F2B_BIN stop
	ctask "Stopping colmena firewall manager" "netfilter" $NFP_BIN stop
	;;
find)
	if [ -n "$2" ]; then
		echo "F2B"
		echo "---"
		cat $F2B_LOG | grep $2
		echo "IPS"
		echo "---"
		$IPS_BIN list | grep $2
	fi
	;;
remove)
	if [ -n "$2" ]; then
		# Remove iptables rule for first ip ocurrence
		JAIL=$(cat $F2B_LOG | grep "Ban $2" | egrep -v Restore | head -1 | sed -e "s@^.*\[@@" | sed -e "s@\].*@@")
		if [ -n "$JAIL" ]; then
			fail2ban-client set "$JAIL" unbanip "$2"
			echo "IP $2 removed from jail $JAIL"
		else
			echo "IP not found"
		fi
		# Remove ipset rule
		IPv4=$(/usr/bin/expr index "$2" .)
		if [ "$IPv4" -gt 0 ]; then
			NET4=$(/usr/bin/expr index "$2" /)
			if [ "$NET4" -gt 0 ]; then
				$IPS_BIN del BLACKLIST_NET $2
				echo "IP $2 removed from BLACKLIST_NET"
			else
				$IPS_BIN del BLACKLIST_IP $2
				echo "IP $2 removed from BLACKLIST_IP"
			fi
		fi
		IPv6=$(/usr/bin/expr index "$2" :)
		if [ "$IPv6" -gt 0 ]; then
			NET6=$(/usr/bin/expr index "$2" /)
			if [ "$NET6" -gt 0 ]; then
				$IPS_BIN del BLACKLIST_NET6 $2
				echo "IP $2 removed from BLACKLIST_NET6"
			else
				$IPS_BIN del BLACKLIST_IP6 $2
				echo "IP $2 removed from BLACKLIST_IP6"
			fi
		fi
	else
		echo "Please provide a valid IP"
	fi
	;;
flush)
	ctask "Flushing colmena firewall manager" "netfilter" $NFP_BIN flush
	;;
status)
	ctask "Showing colmena firewall manager status" "netfilter" $NFP_BIN status
	ctask "Showing colmena failure manager status" "fail2ban" $F2B_BIN "status | grep Active"
	;;
version)
	echo "Colmena v$COLMENA_VER"
	;;
*)
    echo "Usage: $0 {start|restart|reload|force-reload|force-restart|restore|save|flush|stop|status|list-set|list-ban|list-blocked|list-ports|list-rules|find|remove}" >&2
    exit 1
    ;;
esac

exit $rc
